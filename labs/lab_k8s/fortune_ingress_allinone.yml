apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fortune-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
        - path: /fortune
          backend:
            serviceName: fortune-deploy-service
            servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: fortune-deploy-service
  labels:
    app: fortune-deploy
    deployment: pks-workshop
spec:
  ports:
    - port: 80
      name: ui
    - port: 9080
      name: backend
  selector:
    app: fortune-deploy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fortune-deploy
  labels:
    app: fortune-deploy
    deployment: pks-workshop
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fortune-deploy
  template:
    metadata:
      name: fortune-deploy
      labels:
        app: fortune-deploy
        deployment: pks-workshop
    spec:
      containers:
        - name: ui
          image: azwickey/fortune-ui:latest
          ports:
            - containerPort: 80
              protocol: TCP
        - name: backend
          image: azwickey/fortune-backend-jee:latest
          ports:
            - containerPort: 9080
              protocol: TCP
          env:
          - name: REDIS_HOST
            value: fortune-redis-service

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: fortune-redis
    deployment: pks-workshop
  name: fortune-redis-service
spec:
  ports:
  - port: 6379
    name: redis
  selector:
    app: fortune-redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fortune-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fortune-redis
  serviceName: fortune-redis-service
  template:
    metadata:
      name: fortune-redis
      labels:
        app: fortune-redis
        deployment: pks-workshop
    spec:
      containers:
      - name: fortune-redis
        image: redis
        command: [sh, -c, redis-server /redis-config/redis.conf]
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: data
          mountPath: /redis-data
        - name: config
          mountPath: /redis-config
      volumes:
      - name: config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: fortune-redis
        deployment: pks-workshop
      annotations:
        volume.beta.kubernetes.io/storage-class: standard
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  labels:
    app: fortune-redis
    deployment: pks-workshop
data:
  redis.conf: |
    bind 0.0.0.0
    port 6379
    dir /redis-data
    save 5 1
    save 60 3